<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Binary regression analysis on Documentation for Hugo Learn Theme</title>
    <link>/en/binary_regression/</link>
    <description>Recent content in Binary regression analysis on Documentation for Hugo Learn Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language><atom:link href="/en/binary_regression/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Prepare your dataset</title>
      <link>/en/binary_regression/prepare-data_binary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/binary_regression/prepare-data_binary/</guid>
      <description>For this section we will be using data from the ‘British Election Study’ survey to investigate the effect of perceptions about the economy on party choice. This is part of a broader research examining the effect of political issues on party choice and especialy on the effect of the economy on the party in government.
Lewis-Beck, Michael S., and Martin Paldam. “Economic voting: an introduction.” Electoral studies 19.2-3 (2000): 113-121.</description>
    </item>
    
    <item>
      <title>Create your dependent variable</title>
      <link>/en/binary_regression/prepare-dependent_variable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/binary_regression/prepare-dependent_variable/</guid>
      <description>  Create the dependent variable Our dependent variable is a dichotomous, dummy variable where \(1\) means that the respondent voted for the party in government - this is what we are trying to explain- and \(0\) means that they voted for another party.
eco_voting&amp;lt;-eco_voting %&amp;gt;% mutate(incumbent=case_when(b02==2~1, b02==1~0, b02&amp;gt;=3~0))  You may use the table() function to double check the new variable entitled `incumbent’:
table(eco_voting$b02) ## ## 0 1 2 3 4 5 6 7 ## 2 457 347 48 49 1 19 21 table(eco_voting$incumbent) ## ## 0 1 ## 595 347  </description>
    </item>
    
    <item>
      <title>The logistic regression model</title>
      <link>/en/binary_regression/models/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/binary_regression/models/</guid>
      <description>Logistic Regression Model We will use the generalized linear model function glm() to estimate a logistic regression-remember that we have a dummy dependent variable. The function is very similar to the lm() function- the only difference is that there is an additional argument called family(). The family() function will tell R that we want to estimate a logistic regression.
Let’s see it in practice, all we have to do is to include the following line in the glm() function:</description>
    </item>
    
    <item>
      <title>Predicted probabilities</title>
      <link>/en/binary_regression/predicted_probabilities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/binary_regression/predicted_probabilities/</guid>
      <description>Predicted probabilities As you may have already realised, log-odds are not straight-forward. This is why we use the predict() function which give us predictions for Y, the dependent variable.
probabilities&amp;lt;-predict(logit.model,type = &amp;quot;response&amp;quot;)  The effects package The final section include’s the use of the effects package developed by Fox, et al. The effects package creates plots for various statistical models. In this example I will show you how it works with a logistic model- but it works with linear models, mixed effects models and many other.</description>
    </item>
    
  </channel>
</rss>
