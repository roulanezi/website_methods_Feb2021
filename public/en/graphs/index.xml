<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Visualising relationships on Documentation for Hugo Learn Theme</title>
    <link>/en/graphs/</link>
    <description>Recent content in Visualising relationships on Documentation for Hugo Learn Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language><atom:link href="/en/graphs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The ggplot package</title>
      <link>/en/graphs/ggplot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/graphs/ggplot/</guid>
      <description>Learning Objectives By the end of this section you will:
 Learn the basic concepts associated the grammar of graphics such as aesthetic mapping. Be introduced to some initial steps to preparing your data for plotting graphs.   The ggplot package The most common data visualisation package in RStudio is ggplot. We may install ggplot by using the install.packages() function. We write install.packages(&#34;ggplot2&#34;) and we call the package by using the library() function.</description>
    </item>
    
    <item>
      <title>Graphs-categorical variables</title>
      <link>/en/graphs/graphs_categorical/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/graphs/graphs_categorical/</guid>
      <description>Learning Objectives By the end of this section you should be able to:
 Understand and use aesthetic mapping within ggplot2 Plot a barplot using categorical data Make adjustments to the theme and legend of you barplot  Below you will find some examples of graphs for categorical variables. Of course there are many more graphs available to help you visualise your hypothesis and research question.
 Bar Plots Let’s use this minimal example to see how ggplot works.</description>
    </item>
    
    <item>
      <title>Graphs-continuous variables</title>
      <link>/en/graphs/graphs_continuous/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/graphs/graphs_continuous/</guid>
      <description>Learning Objectives By the end of this section you should be able to:
 Understand how to plot continuous variables Use boxplots, line plots , violin plots and 3D plots for continuous variables   One continuous variable For the following example we will use a variable describing citizens’ satisfaction with the political system, the name of the variable is v144. We will use the names() function to give a meaningful name to the variable.</description>
    </item>
    
    <item>
      <title>Graphs-ordinal variables</title>
      <link>/en/graphs/graphs_ordinal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/graphs/graphs_ordinal/</guid>
      <description>Learning Objectives By the end of this section you should be able to:
 Plot ordinal variables using ggplot2 Change or adjust the labels of a variable Use the density plot to represent ordinal variables.  In this section we will use two variables describing anti-immigration attitudes, the first one is called v184 and is asking respondents to agree or diagree with the following statement “Immigrants take away jobs”.</description>
    </item>
    
    <item>
      <title>FAQ</title>
      <link>/en/graphs/faq_ggplot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/graphs/faq_ggplot/</guid>
      <description>Why can’t I see my graph? One common reason why your graph may not be displaying is that you may have not typed the name of your graph and run it.
 R cannot find the variable I would like to plot. There are a two common reasons why R might not be able to find your variable. Check that you have spelt the name exactly as it appears in the dataset (remember that you can use the codebook to check variable names and descriptions to do this)</description>
    </item>
    
  </channel>
</rss>
